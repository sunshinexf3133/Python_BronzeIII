#coding:utf-8
#程序的思路：
先用pyHook的HookManager方法创建一个钩子对象，然后在键盘和鼠标的挂钩点挂上自己定制的回调函数，开启钩子，
最后利用pythoncom（pywin32安装后自带）的PumpMessages方法开启一个windows消息就行了。这个监听状态可以通过kill掉进程结束。
在回调函数里，我在根目录下建了log/keyboard/和log/mouse/两个路径，分别存放键盘和鼠标的日志。键盘日志里，按时间顺序记录了对
应时间的键盘输入、窗口名字等信息，鼠标日志里，按时间顺序记录了窗口名字信息。另外，还增加了快捷键功能，F7键用于关闭日志功能
（进程仍监听只是不记录信息），F4键用于再次开启。其实这个程序本身算是个示例程序，比较清楚，但是这个功能还是很有意义的，可以
作为后续统计或者机器学习的原始数据，背后的结论应该是很有代表性的。比如可以分析自己，在开电脑的时候各个活动所占的时间比例，
或者键盘上哪些键甚至哪些组合键使用频率比较高等等。

#note1:
1.global --将变量定义义为全局变量。可以通过定义为全局变量，实现在函数内部改变变量值。
2.一个global语句可以同时定义多个变量，如 global x, y, z

#note2:
1.os.path.exists(path)  --路径存在则返回True,路径损坏返回False
2.os.makedirs(path) --用于递归创建目录。path -- 需要递归创建的目录

#note3
f = open()的'a'模式--以追加模式打开：即把所有要写入文件的数据都追加到文件的末尾

#note4
chr(x) 返回x的ASCII字符